/*
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.messente.api;

import com.messente.ApiException;
import com.messente.api.ErrorPhonebook;
import com.messente.api.GroupEnvelope;
import com.messente.api.GroupListEnvelope;
import com.messente.api.GroupName;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    /**
     * Creates a new group with the provided name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGroupTest() throws ApiException {
        GroupName groupName = null;
        GroupEnvelope response = api.createGroup(groupName);
        // TODO: test validations
    }

    /**
     * Deletes a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGroupTest() throws ApiException {
        String groupId = null;
        api.deleteGroup(groupId);
        // TODO: test validations
    }

    /**
     * Lists a group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchGroupTest() throws ApiException {
        String groupId = null;
        GroupEnvelope response = api.fetchGroup(groupId);
        // TODO: test validations
    }

    /**
     * Returns all groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchGroupsTest() throws ApiException {
        GroupListEnvelope response = api.fetchGroups();
        // TODO: test validations
    }

    /**
     * Updates a group with the provided name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupTest() throws ApiException {
        String groupId = null;
        GroupName groupName = null;
        GroupEnvelope response = api.updateGroup(groupId, groupName);
        // TODO: test validations
    }

}
