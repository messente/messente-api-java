/*
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services. Use Messente API library to send and receive SMS, Viber and WhatsApp messages, blacklist phone numbers to make sure you're not sending any unwanted messages, manage contacts and groups.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.messente.api;

import com.messente.ApiException;
import com.messente.api.ContactEnvelope;
import com.messente.api.ContactFields;
import com.messente.api.ContactListEnvelope;
import com.messente.api.ContactUpdateFields;
import com.messente.api.ErrorPhonebook;
import com.messente.api.GroupListEnvelope;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContactsApi
 */
@Ignore
public class ContactsApiTest {

    private final ContactsApi api = new ContactsApi();

    
    /**
     * Adds a contact to a group.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addContactToGroupTest() throws ApiException {
        String groupId = null;
        String phone = null;
        Object response = api.addContactToGroup(groupId, phone);

        // TODO: test validations
    }
    
    /**
     * Creates a new contact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createContactTest() throws ApiException {
        ContactFields contactFields = null;
        ContactEnvelope response = api.createContact(contactFields);

        // TODO: test validations
    }
    
    /**
     * Deletes a contact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteContactTest() throws ApiException {
        String phone = null;
        api.deleteContact(phone);

        // TODO: test validations
    }
    
    /**
     * Lists a contact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchContactTest() throws ApiException {
        String phone = null;
        ContactEnvelope response = api.fetchContact(phone);

        // TODO: test validations
    }
    
    /**
     * Lists groups of a contact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchContactGroupsTest() throws ApiException {
        String phone = null;
        GroupListEnvelope response = api.fetchContactGroups(phone);

        // TODO: test validations
    }
    
    /**
     * Returns all contacts.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchContactsTest() throws ApiException {
        List<String> groupIds = null;
        ContactListEnvelope response = api.fetchContacts(groupIds);

        // TODO: test validations
    }
    
    /**
     * Removes a contact from a group.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeContactFromGroupTest() throws ApiException {
        String groupId = null;
        String phone = null;
        api.removeContactFromGroup(groupId, phone);

        // TODO: test validations
    }
    
    /**
     * Updates a contact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateContactTest() throws ApiException {
        String phone = null;
        ContactUpdateFields contactUpdateFields = null;
        ContactEnvelope response = api.updateContact(phone, contactUpdateFields);

        // TODO: test validations
    }
    
}
