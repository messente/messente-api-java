/*
 * Messente API
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.messente.api;

import com.messente.ApiException;
import com.messente.api.ErrorPhonebook;
import com.messente.api.FetchBlacklistSuccess;
import com.messente.api.NumberToBlacklist;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlacklistApi
 */
@Disabled
public class BlacklistApiTest {

    private final BlacklistApi api = new BlacklistApi();

    /**
     * Adds a phone number to the blacklist
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addToBlacklistTest() throws ApiException {
        NumberToBlacklist numberToBlacklist = null;
        api.addToBlacklist(numberToBlacklist);
        // TODO: test validations
    }

    /**
     * Deletes a phone number from the blacklist
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFromBlacklistTest() throws ApiException {
        String phone = null;
        api.deleteFromBlacklist(phone);
        // TODO: test validations
    }

    /**
     * Returns all blacklisted phone numbers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchBlacklistTest() throws ApiException {
        FetchBlacklistSuccess response = api.fetchBlacklist();
        // TODO: test validations
    }

    /**
     * Checks if a phone number is blacklisted
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void isBlacklistedTest() throws ApiException {
        String phone = null;
        api.isBlacklisted(phone);
        // TODO: test validations
    }

}
